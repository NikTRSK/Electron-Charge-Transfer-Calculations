#!/usr/bin/perl

# Nikica Trajkovski #
# Fock Matrix read-code adapted from David Reha, Institute of Nanobiology and Structural Biology - UNSB #

#use strict; # disables certain Perl expressions that could behave unexpectedly or are difficult to debug, turning them into errors.
use warnings; # enable warnings

# check for missing parameters
if (@ARGV < 1) {
  die "Missing .com.log input file\n"
};

# read in input file
open(inputData, <$ARGV[0]>) or die "Couldn't open .com.log file\n";

# Find Fock matrix
$beginMatrix = -1; # Holds the beginning of the fock matrix
while(<inputData>) {
  # if Fock Matrix found process the data
  if ($_=~/Fock matrix \(alpha\)/) {
    $beginMatrix = $.;
    print STDERR "Fock matrix found at line number: $.\n";
    # exit

    # create dir
    #mkdir("/matrices") or die "Couldn't create $. directory, $!";
    #print "Directory created succesfully";

    # create a new file
    open(outputFile, ">fockMatrix.txt") or die "Couldn't open file, $!";

    # skip first 2 lines of matrix
    # for ($skip = 0; $skip < 2; $skip++) {
    #   $line = <inputData>;
    # }

    #spot to add code for processing
    #
  }

  # if at the end of the matrix end processing
  if ($_=~/Fock matrix \(beta\)/) {
    print "End of matrix at line: $.\n";
    last;
  }

  # extract matrix
  if ($beginMatrix > 1) {
    #print $_;

    $line = <inputData>;
    $line=~s/^\s*//;
  # print $line;
    @tmp=split(/\s+/,$line);
    $tmpn=@tmp;
    if($tmpn<1){
      die "Wrong format too short ($tmpn) $line";
    };
    unless($tmp[0]=~/^\d+$/){
      die "Wrong format $tmp[0]\n";
    };

      if(($tmp[0]=~/^\d+$/ and $tmpn==1) or $tmp[1]=~/^\d+$/){
    $header=1;
    if($j==0){
      $cpa=$si;
    };  
    if($i+$si!=$cpa){
      die "Disagree number of rows\n";
    };
    $i=$i+$r;
    $j=$j+$r;
    $r=0;
    foreach $tp (@tmp){
      unless($tp=~/^\d+$/){
        die "Wrong format, $tp not a header\n";
      };
      if($tp-1!=$j+$r){
        die "Problem with the format, diagreement with column numbers $j $r $tp\n";
      }; 
      $r++;
    };
    $si=0;
  };
  if($header==0){
    if($tmp[0]-1!=$i+$si){
      die "Problem with the format, diagreement with row numbers $i+$si $tmp[0]-1\n";
    };
    $s=0;
    for($zi=1;$zi<$tmpn;$zi++){
      unless($tmp[$zi]=~/^[-+]?\d+\.\d+D[-+]\d+$/){
        die "Wrong format, $tmp[$zi] not a number in exponential format\n";
      };  
      $tmp[$zi]=~s/D/E/;
      $mat[$i+$si][$j+$s]=$tmp[$zi];
      $s++;
    };
    unless($r==$s){
      if($si+1>$r or $si+1!=$s){
        die "Incompatible format ($i,$j) $r $s {$tmpn}\n";
      };
    };
    $si++;
  };
  $#tmp=-1;
  }

}

print STDERR "-----------$cpa----------\n";
for($i=0;$i<$cpa;$i++){
# print "$i ";
  for($j=0;$j<=$i;$j++){
    print "$mat[$i][$j] ";
  };
  for($j=$i+1;$j<$cpa;$j++){
    printf "$mat[$j][$i] ";
  };
  print "\n";
};  

if ($beginMatrix != 1) {
  print "Fock matrix not found in the input file!!!.\n";
  close(inputData);
  exit
}

close(inputData);
close(outputFile);